/* Automatically generated file; DO NOT EDIT. */
/* RT-Thread Configuration */
/* RT-Thread Kernel */
/* RT_USING_CORE_FREERTOS is not set */
/* RT_THREAD_PRIORITY_8 is not set */
/* RT_THREAD_PRIORITY_256 is not set */
/* RT_USING_TIMER_SOFT is not set */
/* RT_DEBUG_COLOR is not set */
/* RT_DEBUG_INIT_CONFIG is not set */
/* RT_DEBUG_USING_GPIO is not set */
/* RT_DEBUG_THREAD_CONFIG is not set */
/* RT_DEBUG_SCHEDULER_CONFIG is not set */
/* RT_DEBUG_IPC_CONFIG is not set */
/* RT_DEBUG_TIMER_CONFIG is not set */
/* RT_DEBUG_IRQ_CONFIG is not set */
/* RT_DEBUG_MEM_CONFIG is not set */
/* RT_DEBUG_SLAB_CONFIG is not set */
/* RT_DEBUG_MEMHEAP_CONFIG is not set */
/* RT_DEBUG_MODULE_CONFIG is not set */
/* Inter-Thread communication */
/* RT_USING_SIGNALS is not set */
/* Memory Management */
/* RT_USING_NOHEAP is not set */
/* RT_USING_SLAB is not set */
/* RT_USING_MEMHEAP_AS_HEAP is not set */
/* RT_USING_MEMTRACE is not set */
/* Kernel Device Object */
/* RT_USING_DEVICE_OPS is not set */
/* RT_USING_INTERRUPT_INFO is not set */
/* ARCH_CPU_STACK_GROWS_UPWARD is not set */
/* RT-Thread Components */
/* RT_USING_USER_MAIN is not set */
/* C++ features */
/* RT_USING_CPLUSPLUS is not set */
/* Command shell */
/* FINSH_ECHO_DISABLE_DEFAULT is not set */
/* FINSH_USING_AUTH is not set */
/* Device virtual file system */
/* elm-chan's FatFs, Generic FAT Filesystem Module */
/* RT_DFS_ELM_USE_LFN_0 is not set */
/* RT_DFS_ELM_USE_LFN_1 is not set */
/* RT_DFS_ELM_USE_LFN_2 is not set */
/* RT_DFS_ELM_LFN_UNICODE_1 is not set */
/* RT_DFS_ELM_LFN_UNICODE_2 is not set */
/* RT_DFS_ELM_LFN_UNICODE_3 is not set */
/* RT_DFS_ELM_USE_ERASE is not set */
/* RT_USING_DFS_ROMFS is not set */
/* RT_USING_DFS_RAMFS is not set */
/* RT_USING_DFS_UFFS is not set */
/* RT_USING_DFS_JFFS2 is not set */
/* RT_USING_DFS_NFS is not set */
/* RT_USING_LITTLEFS is not set */
/* Device Drivers */
/* RT_USING_CAN is not set */
/* RT_USING_HWTIMER is not set */
/* RT_USING_CPUTIME is not set */
/* RT_USING_I2C_BITOPS is not set */
/* RT_USING_ADC is not set */
/* RT_USING_MTD_NAND is not set */
/* RT_USING_MTD is not set */
/* RT_USING_PM_FG is not set */
/* RT_USING_PM_CHARGER is not set */
/* RT_USING_RTC is not set */
/* RT_SDIO_DEBUG is not set */
/* RT_USING_QSPI is not set */
/* RT_USING_SPI_MSD is not set */
/* RT_USING_SFUD is not set */
/* RT_USING_W25QXX is not set */
/* RT_USING_GD is not set */
/* RT_USING_ENC28J60 is not set */
/* RT_USING_SPI_WIFI is not set */
/* RT_USING_WDT is not set */
/* RT_USING_SENSOR is not set */
/* RT_USING_TOUCH is not set */
/* Using WiFi */
/* RT_WLAN_DEBUG is not set */
/* Using USB */
/* RT_USING_USB_HOST is not set */
/* RT_USB_DEVICE_COMPOSITE is not set */
/* _RT_USB_DEVICE_NONE is not set */
/* _RT_USB_DEVICE_CDC is not set */
/* _RT_USB_DEVICE_MSTORAGE is not set */
/* _RT_USB_DEVICE_RNDIS is not set */
/* _RT_USB_DEVICE_ECM is not set */
/* _RT_USB_DEVICE_WINUSB is not set */
/* _RT_USB_DEVICE_UAC1 is not set */
/* RT_USB_DEVICE_HID_MOUSE is not set */
/* RT_USB_DEVICE_HID_GENERAL is not set */
/* RT_USB_DEVICE_HID_MEDIA is not set */
/* POSIX layer and C standard library */
/* RT_USING_PTHREADS is not set */
/* RT_USING_POSIX_MMAP is not set */
/* RT_USING_POSIX_AIO is not set */
/* RT_USING_MODULE is not set */
/* Network */
/* Socket abstraction layer */
/* RT_USING_SAL is not set */
/* light weight TCP/IP stack */
/* RT_USING_LWIP202 is not set */
/* RT_USING_LWIP210 is not set */
/* RT_LWIP_SNMP is not set */
/* Static IPv4 Address */
/* RT_LWIP_PPP is not set */
/* RT_LWIP_REASSEMBLY_FRAG is not set */
/* RT_LWIP_NETIF_LOOPBACK is not set */
/* RT_LWIP_STATS is not set */
/* RT_LWIP_DEBUG is not set */
/* Modbus master and slave stack */
/* RT_USING_MODBUS is not set */
/* AT commands */
/* RT_USING_AT is not set */
/* LWIP_USING_DHCPD is not set */
/* System */
/* RT_USING_LITTLEVGL2RTT is not set */
/* VBUS(Virtual Software BUS) */
/* RT_USING_VBUS is not set */
/* Utilities */
/* PKG_CMBACKTRACE_PLATFORM_M0_M0PLUS is not set */
/* PKG_CMBACKTRACE_PLATFORM_M3 is not set */
/* PKG_CMBACKTRACE_PLATFORM_M7 is not set */
/* PKG_CMBACKTRACE_PLATFORM_NOT_SELECTED is not set */
/* PKG_CMBACKTRACE_PRINT_CHINESE is not set */
/* PKG_CMBACKTRACE_FAULT_DUMP_TO_FLASH is not set */
/* RT_USING_LOGTRACE is not set */
/* RT_USING_RYM is not set */
/* RT_USING_RZM is not set */
/* RT_USING_ULOG is not set */
/* RT_USING_UTEST is not set */
/* ARM CMSIS */
/* RT_USING_CMSIS_OS is not set */
/* RT_USING_RTT_CMSIS is not set */
/* RT-Thread Benchmarks */
/* RT_USING_BENCHMARK is not set */
/* RT_USING_NET_HTTP is not set */
/* RT_USING_OTA is not set */
/* RT-Thread third party package */
/* PKG_CMSIS_RTOS2 is not set */
/* RT_USING_WLAN_WICED is not set */
/* RT_NETUTILS_TFTP is not set */
/* RT_NETUTILS_IPERF is not set */
/* RT_NETUTILS_NETIO is not set */
/* RT_NETUTILS_NTP is not set */
/* RT_NETUTILS_TELNET is not set */
/* RT_NETUTILS_TCPDUMP is not set */
/* Bluetooth */
/* BT_ENABLED is not set */
/* examples bluetooth */
/* Bluetooth examlpes */
/* Example 'BT API TEST' Config */
/* BT_API_TEST is not set */
/* Example 'BT DISCOVERY' Config */
/* BT_DISCOVERY_EXAMPLES is not set */
/* Example 'A2DP SINK' Config */
/* A2DP_SINK_EXAMPLE is not set */
/* Example 'A2DP SOURCE' Config  */
/* A2DP_SOURCE_EXAMPLE is not set */
/* Example 'HFP CLIENT' Config */
/* HFP_CLIENT_EXAMPLE is not set */
/* RT_CYPRESS_WIFI_SPI is not set */
/* BT_DEV_MODE is not set */
/* BT_BUILD_VERBOSE is not set */
/* BT_FACTORY_TEST is not set */
/* DEMO_BLE_SENSOR is not set */
/* DEMO_BLE_CLIENT is not set */
/* DEMO_BLE_CLIENT_SERVER is not set */
/* DEMO_SPP_BLE is not set */
/* DEMO_AVK is not set */
/* RT_USING_AUDIO_SERVER is not set */
/* AUDIO_USING_STATIC_LIBRARY is not set */
/* AUDIO_USING_SOURCE_CODE is not set */
/* RT_USING_PKGS is not set */
/* RT-Thread board config */
/* M4_JTAG_ENABLE is not set */
/* DSP_JTAG_ENABLE is not set */
/* RT-Thread rockchip common drivers */
/* HAL_DBG_ON is not set */
/* RT_USING_SND_GLB_RST is not set */
/* RT_USING_RESET is not set */
/* RT_USING_CRU_DUMP is not set */
/* RT_USING_REGULATOR_DUMP is not set */
/* RT_USING_PMIC is not set */
/* RT_USING_DTCM_HEAP is not set */
/* RT_USING_PSRAM_HEAP is not set */
/* Enable Fault Dump Hook */
/* RT_USNING_FAULT_DUMP_HOOK is not set */
/* RT_SNOR_DUAL_IO is not set */
/* RT_USING_SNOR_SFC_HOST is not set */
/* RT_USING_SNOR_SPI_HOST is not set */
/* RT-Thread rockchip pm drivers */
/* RT_USING_PM_REQ_CLK is not set */
/* RT_USING_DVFS_DBG is not set */
/* RT_USING_PM_RUNTIME is not set */
/* RT_USING_PM_TIMER is not set */
/* RT-Thread rockchip vicap driver */
/* RT_USING_VICAP is not set */
/* RT_USING_QPIPSRAM is not set */
/* RT-Thread rockchip coredump driver */
/* RT_USING_COREDUMP is not set */
/* RT_USING_SPINAND is not set */
/* RT-Thread rockchip rk2108 drivers */
/* Enable Audio */
/* RT_USING_DRIVER_AUDIO_PCM_PLUGIN is not set */
/* Audio Cards */
/* RT_USING_AUDIO_CARD_ACDCDIG is not set */
/* RT_USING_AUDIO_CARD_AUDIOPWM is not set */
/* RT_USING_AUDIO_CARD_I2S_MIC is not set */
/* RT_USING_AUDIO_CARD_ES7243 is not set */
/* RT_USING_AUDIO_CARD_ES8156 is not set */
/* RT_USING_AUDIO_CARD_ES8388 is not set */
/* RT_USING_AUDIO_CARD_ADC_ES8311_ECHO is not set */
/* RT_USING_AUDIO_CARD_PDM_ES8388_ECHO is not set */
/* Audio Interfaces */
/* RT_USING_VAD is not set */
/* RT_USING_DISPLAY is not set */
/* RT_USING_KEYCTRL is not set */
/* Enable DSP */
/* RT_USING_DSPFW_LOADER is not set */
/* RT_USING_DSP_TRACE is not set */
/* Enable UART */
/* RT_USING_UART1 is not set */
/* Enable I2C */
/* RT_USING_I2C1 is not set */
/* RT_USING_I2C2 is not set */
/* Enable SPI */
/* RT_USING_SPI2APB is not set */
/* RT_USING_SPI1 is not set */
/* RT_USING_SPI2 is not set */
/* Enable SDIO/SDMMC/eMMC */
/* RT-Thread application */
/* RT_USING_ANIMATION1_DEMO is not set */
/* RT_USING_ANIMATION2_DEMO is not set */
/* RT_USING_CLOCK_DEMO is not set */
/* RT_USING_CLOCK_DARK is not set */
/* RT_USING_CLOCK_WHISKEY is not set */
/* RT_USING_RECORDING_PEN_APP is not set */
/* RT_USING_IOT_DISPLAY is not set */
/* RT_USING_PCBA_TEST is not set */
/* RT_USING_RK_IOT_APP is not set */
/* ENABLE_DUAL_TRACKING is not set */
/* RT-Thread bsp test case */
/* RT_USING_PRIVATE_TEST is not set */
/* RT-Thread Common Test case */
/* RT_USING_TC is not set */
/* RT_USING_FILE_TEST is not set */
/* RT_USING_COMMON_TEST is not set */
MEMORY
{
    XIP (rx) : ORIGIN = 0x18000000, LENGTH = 16M
    SRAM (rxw) : ORIGIN = 0x04000000, LENGTH = 1M
    PSRAM (rxw) : ORIGIN = 0x1C000000, LENGTH = 8M
    DTCM (rxw) : ORIGIN = 0x30200000, LENGTH = 512K
}
FW_MAGIC_LEN = 131584;
XIP_DATA_BASE = 0x60000000;
SRAM_DATA_BASE = 0x20000000;
PSRAM_DATA_BASE = 0x64000000;
RAM_FS_SIZE = 0x10000;
MAIN_STACK_SIZE = 0x400;
PROVIDE(xSramDataBase = SRAM_DATA_BASE );
PROVIDE(xSramBase = ORIGIN(SRAM) );
PROVIDE(xSramSize = LENGTH(SRAM) );
ENTRY(Reset_Handler)
SECTIONS
{
    OS_PART_OFFSET = ORIGIN(XIP) + FW_MAGIC_LEN;
    _stext = OS_PART_OFFSET;
    .vectors OS_PART_OFFSET : AT (OS_PART_OFFSET)
    {
        . = ALIGN(4);
        __ISR_Vector_start__ = .;
        KEEP(*(.vectors)) /* vector table */
        __ISR_Vector_end__ = .;
        *startup_rk2108.o (.text .text.*)
        . = ALIGN(4);
    }
    __vector_remap__ = ORIGIN(SRAM);
    SRAM_TEXT_DEST = ORIGIN(SRAM) + SIZEOF(.vectors);
    SRAM_TEXT_SRC = LOADADDR(.vectors) + SIZEOF(.vectors);
    _stext_ext = SRAM_TEXT_DEST;
    .sram.text SRAM_TEXT_DEST : AT (SRAM_TEXT_SRC)
    {
        . = ALIGN(4);
        KEEP(*(.sram.text))
        *hid.o(.rodata .rodata*) /* read-only data (constants) */
        /* *libForceSramDrivers.a: (.text .text.* .rodata .rodata*) */
        *hal_cache.o(.text .text.* .rodata .rodata*)
        *hal_cpu_sleep.o(.text .text.* .rodata .rodata*)
        *hal_base.o(.text .text.* .rodata .rodata*)
        *hal_snor.o(.text .text.* .rodata .rodata*)
        *hal_fspi.o(.text .text.* .rodata .rodata*)
        *hal_systick.o(.text .text.* .rodata .rodata*)
        *hal_timer.o(.text .text.* .rodata .rodata*)
        *drv_snor.o(.text .text.* .rodata .rodata*)
        *drv_dsp.o(.text .text.* .rodata .rodata*)
        *drv_pm.o(.text .text.* .rodata .rodata*)
        *hal_mbox.o(.text .text.* .rodata .rodata*)
        *hal_pm_cpu.o(.text .text.* .rodata .rodata*)
        *hal_pm_rk2108.o(.text .text.* .rodata .rodata*)
        . = ALIGN(32);
    }
    _etext_ext = .;
    PSRAM_TEXT_DEST = ORIGIN(PSRAM);
    PSRAM_TEXT_SRC = LOADADDR(.sram.text) + SIZEOF(.sram.text);
    .psram.text PSRAM_TEXT_DEST : AT (PSRAM_TEXT_SRC)
    {
        . = ALIGN(4);
        KEEP(*(.psram.text))
        . = ALIGN(32);
    }
    XIP_TEXT_DEST = LOADADDR(.psram.text) + SIZEOF(.psram.text);
    XIP_TEXT_SRC = XIP_TEXT_DEST;
    .xip.text XIP_TEXT_DEST : AT (XIP_TEXT_SRC)
    {
        *(.text) /* remaining code */
        *(.text.*) /* remaining code */
        *(.rodata) /* read-only data (constants) */
        *(.rodata*)
        *(.glue_7)
        *(.glue_7t)
        *(.gnu.linkonce.t*)
        . = ALIGN(4);
        PROVIDE(__ctors_start__ = .);
        /* old GCC version uses .ctors */
        KEEP(*(SORT(.ctors.*)))
        KEEP(*(.ctors))
        /* new GCC version uses .init_array */
        KEEP (*(SORT(.init_array.*)))
        KEEP (*(.init_array))
        PROVIDE(__ctors_end__ = .);
        /* section information for finsh shell */
        . = ALIGN(4);
        __fsymtab_start = .;
        KEEP(*(FSymTab))
        __fsymtab_end = .;
        . = ALIGN(4);
        __vsymtab_start = .;
        KEEP(*(VSymTab))
        __vsymtab_end = .;
        . = ALIGN(4);
        /* section information for initial. */
        . = ALIGN(4);
        __rt_init_start = .;
        KEEP(*(SORT(.rti_fn*)))
        __rt_init_end = .;
        . = ALIGN(4);
        /* section information for modules */
        . = ALIGN(4);
        __rtmsymtab_start = .;
        KEEP(*(RTMSymTab))
        __rtmsymtab_end = .;
        . = ALIGN(4);
        . = ALIGN(32);
    }
    SRAM_DATA_DEST = SRAM_DATA_BASE + SIZEOF(.vectors) + SIZEOF(.sram.text);
    SRAM_DATA_SRC = LOADADDR(.xip.text) + SIZEOF(.xip.text);
    _etext = SRAM_DATA_SRC;
    .sram.data SRAM_DATA_DEST : AT (SRAM_DATA_SRC)
    {
        . = ALIGN(32);
        __data_start__ = .;
        KEEP(*(.sram.data))
        *(vtable)
        *(.data*)
        . = ALIGN(4);
        PROVIDE(__dtors_start__ = .);
        KEEP(*(SORT(.dtors.*)))
        KEEP(*(.dtors))
        PROVIDE(__dtors_end__ = .);
        . = ALIGN(4);
        /* preinit data */
        PROVIDE_HIDDEN (__preinit_array_start = .);
        KEEP(*(.preinit_array))
        PROVIDE_HIDDEN (__preinit_array_end = .);
        . = ALIGN(4);
        /* init data */
        PROVIDE_HIDDEN (__init_array_start = .);
        KEEP(*(SORT(.init_array.*)))
        KEEP(*(.init_array))
        PROVIDE_HIDDEN (__init_array_end = .);
        . = ALIGN(4);
        /* finit data */
        PROVIDE_HIDDEN (__fini_array_start = .);
        KEEP(*(SORT(.fini_array.*)))
        KEEP(*(.fini_array))
        PROVIDE_HIDDEN (__fini_array_end = .);
        KEEP(*(.jcr*))
        . = ALIGN(4);
        /* All data end */
        __data_end__ = .;
    }
    PSRAM_DATA_DEST = PSRAM_DATA_BASE + SIZEOF(.psram.text);
    PSRAM_DATA_SRC = LOADADDR(.sram.data) + SIZEOF(.sram.data);
    .psram.data PSRAM_DATA_DEST : AT (PSRAM_DATA_SRC)
    {
        . = ALIGN(32);
        KEEP(*(.psram.data))
        . = ALIGN(32);
    }
    COPY_TABLE_DEST = LOADADDR(.psram.data) + SIZEOF(.psram.data);
    COPY_TABLE_SRC = COPY_TABLE_DEST;
    .copy.table COPY_TABLE_DEST : AT (COPY_TABLE_SRC)
    {
        . = ALIGN(4);
        __copy_table_start__ = .;
        LONG (LOADADDR(.vectors))
        LONG (ORIGIN(SRAM))
        LONG (SIZEOF(.vectors))
        LONG (LOADADDR(.sram.text))
        LONG (ADDR(.sram.text))
        LONG (SIZEOF(.sram.text))
        LONG (LOADADDR(.sram.data))
        LONG (ADDR(.sram.data))
        LONG (SIZEOF(.sram.data))
        LONG (LOADADDR(.psram.text))
        LONG (ADDR(.psram.text))
        LONG (SIZEOF(.psram.text))
        LONG (LOADADDR(.psram.data))
        LONG (ADDR(.psram.data))
        LONG (SIZEOF(.psram.data))
        __copy_table_end__ = .;
    }
    ZERO_TABLE_DEST = LOADADDR(.copy.table) + SIZEOF(.copy.table);
    ZERO_TABLE_SRC = ZERO_TABLE_DEST;
    .zero.table ZERO_TABLE_DEST : AT (ZERO_TABLE_SRC)
    {
        . = ALIGN(4);
        __zero_table_start__ = .;
        LONG (ADDR(.sram.bss))
        LONG (SIZEOF(.sram.bss))
        LONG (ADDR(.psram.bss))
        LONG (SIZEOF(.psram.bss))
        __zero_table_end__ = .;
    }
    .ARM.exidx (ADDR(.zero.table) + SIZEOF(.zero.table)) : AT (LOADADDR(.zero.table) + SIZEOF(.zero.table))
    {
        __exidx_start = .;
        *(.ARM.exidx* .gnu.linkonce.armexidx.*)
        /* This is used by the startup in order to initialize the .data secion */
        _sidata = .;
        __exidx_end = .;
    }
    .ARM.extab (ADDR(.ARM.exidx) + SIZEOF(.ARM.exidx)) : AT (LOADADDR(.ARM.exidx) + SIZEOF(.ARM.exidx))
    {
        *(.ARM.extab* .gnu.linkonce.armextab.*)
    }
    SRAM_BSS_DEST = ADDR(.sram.data) + SIZEOF(.sram.data);
    .sram.bss SRAM_BSS_DEST (NOLOAD) :
    {
        . = ALIGN(4);
        __bss_start__ = .;
        *(.bss*)
        *(COMMON)
        __bss_end__ = .;
        . = ALIGN(4);
    }
    PSRAM_BSS_DEST = ADDR(.psram.data) + SIZEOF(.psram.data);
    .psram.bss PSRAM_BSS_DEST (NOLOAD) :
    {
        . = ALIGN(32);
        KEEP(*(.psram.bss))
        . = ALIGN(32);
    }
    . = ADDR(.sram.bss) + SIZEOF(.sram.bss);
    RAM_FS_DEST = .;
    /* region for ramfs, enable if you need */
    LARGE_HEAP_DEST = .;
    .large LARGE_HEAP_DEST (NOLOAD) :
    {
        . = ALIGN(4);
        __large_start__ = .;
        . = . + 524288;
        __large_end__ = .;
    }
    MAIN_STACK_DEST = .;
    .stack MAIN_STACK_DEST (NOLOAD) :
    {
        . = ALIGN(4);
        _sstack = .;
        . = . + MAIN_STACK_SIZE;
        _estack = .;
        . = ALIGN(4);
        PROVIDE(__StackTop = .);
    }
    __heap_start__ = .;
}
